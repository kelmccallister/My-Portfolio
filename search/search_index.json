{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome!","text":"<p>I\u2019m Kelsey McCallister, a Technical Writer and certified CMMI Associate based in New York City. With six years of experience in technical writing and one year as a Quality Management System lead, I have developed my skills to encompass everything from Docs as Code to writing in adherence to both national and international standards (e.g., FedRAMP, ISO, CMMI). My CMMI Associate certification enables my role as an Appraisal Team Member (ATM) on an Executive Quality Review Board (EQRB) for CMMI. In this capacity, I would collaborate with my team to evaluate a company\u2019s processes against international best practices, identifying their strengths and weaknesses. </p> <p>Feel free to contact me by email at kelsey.mccallister1289@gmail.com or view my LinkedIn here. I\u2019m always open to networking and new opportunities. Thank you for visiting, and I look forward to connecting with you!</p> <p>Info</p> <p>This site, hosted on GitHub pages, is intended to serve as a portfolio that showcases Kelsey McCallister\u2019s skills with GitHub, Markdown, and technical writing. Navigate through various portfolio items by selecting the tabs above.</p>"},{"location":"Guide-TicTacToe/","title":"Guide: Tic-Tac-Toe","text":"IntroductionInstructionsAppendix A Sign-off Date Name 07/10/2024 Mickey Mouse"},{"location":"Guide-TicTacToe/#introduction","title":"Introduction","text":"<p>Tic Tac Toe is a two-player, turn-based game played on a 3x3 grid. Each player is either an \u201cX\u201d or an \u201cO\u201d. The objective of the game is for a player to get three of their symbols (e.g., \u201cX\u201d or \u201cO\u201d) in a row horizontally, vertically, or diagonally. The first player to achieve this objective wins the game; however, if all cells are filled and neither player has achieved three in a row, then the game ends in a draw. Read through the following prerequisites and instructions for further detail.</p>"},{"location":"Guide-TicTacToe/#prerequisites","title":"Prerequisites","text":"<ul> <li>sheet of paper</li> <li>writing utensils</li> </ul>"},{"location":"Guide-TicTacToe/#instructions","title":"Instructions","text":"<ol> <li> <p>Draw a 3x3 grid on a piece of paper as shown in the figure below.</p> <p></p> </li> <li> <p>Decide which player will be \u201cX\u201d and which player will be \u201cO\u201d.</p> </li> <li>Flip a coin to determine which player has the first turn.</li> <li> <p>Take turns marking one empty cell at a time with the player\u2019s respective symbol.</p> <p>Note</p> <p>Plan moves that either result in getting three in a row or that block an oppenent from doing so; see Appendix A for more details.</p> </li> <li> <p>Play until a player wins or there is a draw.</p> <p>Note</p> <p>A player wins by achieving three of their symbols in a row horizontally, vertically, or diagonally. The game ends in a draw if neither player achieves three in a row and there are no open spaces left on the grid.</p> </li> <li> <p>Return to step 1 to play again.</p> </li> </ol>"},{"location":"Guide-TicTacToe/#appendix-a","title":"Appendix A","text":"Strategy Details Example Take the center During the first turn, a player should place their symbol in the center square. This gives them the most opportunities to achieve three in a row. Block an opponent\u2019s win A player can block an opponent from achieving three in a row by prioritizing blocking their moves over creating winning combinations. Create forks Forks occur when a player has two potential winning combinations on the board. The opponent can only block one combination, thus giving the player the opportunity to win on their next turn. Watch for two-in-a-row A player should look for opportunities to create two-in-a-row patterns to pressure their opponent into blocking their next move. This can allow the player to set up future winning moves. Control the corners Occupying a corner square gives the most flexibility and control over the board; forks can be created more easily. Stay flexible A player should adapt their strategy based on the game\u2019s progression and their opponent\u2019s moves to maintain control of the board. N/A"},{"location":"Quick-Start-Guide/","title":"Quick Start Guide: GitHub Pages","text":"IntroductionInstructions Sign-off Date Name 03/09/2024 Mickey Mouse"},{"location":"Quick-Start-Guide/#introduction","title":"Introduction","text":"<p>GitHub Pages are public webpages hosted and published through GitHub. The following sections provide instructions on how to set up a GitHub Pages site. Complete them in order.</p> Important Note <p>These instructions are for Windows only.</p>"},{"location":"Quick-Start-Guide/#prerequisites","title":"Prerequisites","text":"<p>Ensure that the following tools/programs have been installed:</p> <ul> <li>Git</li> <li>GitHub Desktop</li> <li>Visual Studio Code (VS Code)</li> <li>Python and Pip</li> <li>MkDocs</li> <li>Material for MkDocs</li> <li>Vale</li> </ul> Notes <ul> <li>Installing Python and Pip is a prerequisite to installing MkDocs.</li> <li>Vale must be installed locally and as an extension in VS Code with spell check enabled. </li> </ul>"},{"location":"Quick-Start-Guide/#create-a-repository","title":"Create a Repository","text":"<ol> <li>Open GitHub Browser.</li> <li> <p>Click New at the top of the dashboard.</p> <p></p> </li> <li> <p>Enter the new repository name into the corresponding field.</p> </li> <li>Provide any additional settings.</li> <li>Click Create repository at the bottom of the window.</li> </ol>"},{"location":"Quick-Start-Guide/#clone-the-repository","title":"Clone the Repository","text":"<ol> <li>Navigate to the desired repository. </li> <li> <p>Click &lt;&gt; Code.</p> <p></p> </li> <li> <p>Copy the URL.</p> </li> <li>Open GitHub Desktop.</li> <li> <p>Select the Current repository drop-down list.</p> <p></p> </li> <li> <p>Click Add &gt; Clone repository.</p> <p></p> </li> <li> <p>Select the URL tab.</p> </li> <li>Paste the URL into the corresponding field.</li> <li> <p>Click Clone.</p> <p></p> </li> </ol>"},{"location":"Quick-Start-Guide/#create-a-new-branch","title":"Create a New Branch","text":"<ol> <li>Select a repository from the Current repository drop-down list.</li> <li> <p>Click the Current branch drop-down list.</p> Note <p>Ensure the current branch selected is <code>Main</code>.</p> </li> <li> <p>Click New branch.</p> <p></p> </li> <li> <p>Enter the branch name into the corresponding field.</p> </li> <li> <p>Click Create branch.</p> <p></p> </li> <li> <p>Click Publish branch.</p> </li> </ol>"},{"location":"Quick-Start-Guide/#configure-the-repository","title":"Configure the Repository","text":"<ol> <li>Create and publish a new branch.</li> <li>Click Open in Visual Studio Code in GitHub Desktop.</li> <li>Open the VS Code terminal. </li> <li> <p>Run the following command to create a docs folder and the <code>mkdocs.yml</code> and <code>index.md</code> files:</p> <pre><code>mkdocs new .\n</code></pre> </li> <li> <p>Open the <code>mkdocs.yml</code> file.</p> </li> <li> <p>Add the following plugins to the file:</p> MkDocs Material PluginsPython Plugins <pre><code>theme:\n  name: material\n  icon:\n    repo: fontawesome/brands/github\n    edit: material/pencil\n  features:\n    - navigation.tabs\n    - navigation.tracking\n    - navigation.expand\n    - toc.integrate\n    - content.action.edit\n  language: en\n</code></pre> <pre><code>markdown_extensions:\n- admonition\n- codehilite\n- smarty\n- pymdownx.magiclink\n- pymdownx.betterem\n- pymdownx.details\n- pymdownx.emoji\n- pymdownx.saneheaders\n- pymdownx.highlight\n- pymdownx.critic\n- pymdownx.caret\n- pymdownx.mark\n- pymdownx.tilde\n- pymdownx.inlinehilite\n- pymdownx.tabbed:\n    alternate_style: true\n- pymdownx.tasklist:\n    clickable_checkbox: true\n- pymdownx.superfences:\n    custom_fences:\n      - name: mermaid\n        class: mermaid\n        format: !!python/name:pymdownx.superfences.fence_code_format  \n- pymdownx.tasklist:\n    custom_checkbox: true          \n- attr_list\n- md_in_html\n- sane_lists\n- tables\n</code></pre> </li> <li> <p>Save the changes.</p> </li> <li> <p>Click the New Folder icon.</p> <p></p> </li> <li> <p>Enter \u201c.github/workflows\u201d.</p> </li> <li> <p>Click the New File icon.</p> <p></p> </li> <li> <p>Enter \u201cci.yml\u201d.</p> </li> <li>Open the <code>ci.yml</code> file.</li> <li> <p>Paste the following into the file:</p> <pre><code>name: ci\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-python@v4\n        with:\n           python-version: 3.x\n      - uses: actions/cache@v2\n        with:\n          key: ${{ github.ref }}\n          path: .cache\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n</code></pre> </li> <li> <p>Save the changes.</p> </li> <li>Exit the .github folder. </li> <li>Click the New File icon.</li> <li>Enter \u201c.vale.ini\u201d.</li> <li>Open the <code>.vale.ini</code> file.</li> <li> <p>Paste the following into the file:</p> <pre><code>StylesPath = .github/styles\n\nMinAlertLevel = warning\n\nVocab = vale\n\n[*.md]\nBasedOnStyles = Vale\nignore = URL, Consistency\n\nVale.Terms = NO\n</code></pre> </li> <li> <p>Save the changes.</p> </li> <li>Select the .github folder</li> <li>Click the New Folder icon.</li> <li>Enter \u201cstyles/config/vocabularies/vale\u201d. </li> <li>Click the New File icon.</li> <li> <p>Enter \u201caccept.txt\u201d.</p> Note <p>The <code>accept.txt</code> file allows spelling rule exceptions.</p> </li> <li> <p>Save the changes.</p> </li> <li>Commit the changes to Main.</li> </ol>"},{"location":"Quick-Start-Guide/#create-a-virtual-environment","title":"Create a Virtual Environment","text":"Info <p>Setting up a virtual environment within a repository\u2019s directory using Python\u2019s venv module provides the ability to preview changes made before making a commit. It will run a web server that exposes the website at <code>http://127.0.0.1:8000</code>.</p> <ol> <li>Click Open in Visual Studio Code in GitHub Desktop after creating a new branch.</li> <li>Open the terminal in VS Code.</li> <li> <p>Enter the following commands into the terminal:</p> <pre><code>python -m venv ./venv\n./venv/scripts/activate\n</code></pre> </li> <li> <p>Run:</p> <pre><code>mkdocs serve\n</code></pre> </li> <li> <p>Open the <code>http://127.0.0.1:8000</code> link.</p> </li> </ol>"},{"location":"Quick-Start-Guide/#publish-to-github-pages","title":"Publish to GitHub Pages","text":"<ol> <li>Open GitHub Browser. </li> <li>Navigate to the repository being used.</li> <li> <p>Select the Settings tab at the top of the window.</p> <p></p> </li> <li> <p>Select Pages from the left-hand side menu.</p> </li> <li> <p>Select gh-pages from the branch drop-down list and select /(root) from the file drop-down list under the page\u2019s Branch section.</p> <p></p> </li> <li> <p>Click Save.</p> </li> <li> <p>Click Visit Site at the top of the page.</p> <p></p> </li> </ol>"},{"location":"Standard-Opp-Procedure/","title":"Documentation Request Procedure","text":""},{"location":"Standard-Opp-Procedure/#introduction","title":"Introduction","text":""},{"location":"Standard-Opp-Procedure/#purpose","title":"Purpose","text":"<p>The purpose of this standard opperating procedure is to provide details and instructions about receiving and fulfilling documentation requests. It identifies who is responsible for approving, writing, revising, and publishing requested documentation.</p>"},{"location":"Standard-Opp-Procedure/#audience","title":"Audience","text":"<p>This procedure applies to all personnel submitting a documentation request (Requester) to the Documentation Team (Team) and to Team personnel fulfilling those request(s).</p>"},{"location":"Standard-Opp-Procedure/#roles-and-responsibilities","title":"Roles and Responsibilities","text":"Role Responsibility Requestor Provide required request information. Team Member Write, review, revise, and publish requested documentation. Team Supervisor Review documentation requests and create Jira stories."},{"location":"Standard-Opp-Procedure/#definitions","title":"Definitions","text":"Type Term Definition Jira Linking \u201cIs a child of\u201d Linking category for a request that sits below another issue or request (e.g., a subtask that belongs to a task). Jira Linking \u201cIs a parent of\u201d Linking category for a request that sits above another issue or request (e.g., a story that is made up of subtasks). Jira Linking \u201cIs related to\u201d Linking category for a request that is related to an existing issue or request. Jira Status Accepted Status of requests that have been accepted for delivery/publication. Jira Status Pending Approval Status of requests that: (1) have undergone steps 2-7 of the procedure or (2) have undergone steps 2-7 of the procedure (\u201capproved\u201d), but work has not begun Jira Status Canceled Status of requests that have been rejected or canceled. Jira Status Completed Status of requests that have been delivered/published. Jira Status In Progress Status of approved requests that a Team Member is actively working on. Jira Status Test Completed Status of requests that are being reviewed and discussed by a Team Member and the Requester(s), Stake Holder(s), and/or Subject Matter Expert(s) (SME) in meetings, chat, email, etc. for additional information and/or confirmation of content and/or formatting. Request Terminology Intended audience The individual(s) or group(s) the documentation is intended for. Request Terminology Medium The means by which the documentation will be delivered/published (e.g., SharePoint site, PDF, Word document, etc.). Request Terminology Milestones/Deadlines Hallmarks of progress for the documentation and/or the date it needs to be completed by. Request Terminology Purpose The specific topic, intended use, and/or goals of the documentation. Request Terminology Scope An in-depth description of sub-tasks, outline/tree, desired layout/format, etc.; includes any additional details that can provide further context for the documentation (e.g., a SharePoint site that reflects the desired formatting, applicable regulations or standards, etc.)."},{"location":"Standard-Opp-Procedure/#confidentiality-statement","title":"Confidentiality Statement","text":"<p>The information contained within this document is intended for internal use. Any review, retransmission, dissemination, or other use of the information in this document by persons or entities other than approved personnel is strictly prohibited. Any unintended recipient of this document is expected to contact a company representative immediately and destroy any copies of this document.</p>"},{"location":"Standard-Opp-Procedure/#procedure-and-flowchart","title":"Procedure and Flowchart","text":"<p>The following flowchart and procedure provide instructions about submitting and fulfilling documentation requests. </p> Note <p>The Jira workflow can be found on Appendix A.</p>"},{"location":"Standard-Opp-Procedure/#flowchart","title":"Flowchart","text":""},{"location":"Standard-Opp-Procedure/#procedure","title":"Procedure","text":"<p>Requesters are required to complete step 1 of the procedure to successfully submit a documentation request. Mickey Mouse (Team Supervisor) reviews the submitted request and either approves or rejects it. If the request is approved, then the Team Supervisor creates a Jira story and assigns it to Kelsey McCallister and/or Lizzy McGuire (Team Member); if the request is denied, then the Team Supervisor notifies the Requestor(s) and provides a justification. </p> <p>Once a request is assigned, the assigned Team Member conducts a discovery call with the Requestor(s) to confirm the provided information and gather any additional information. The Team Member then makes any necessary edits to the request/story, creates an initial draft of the requested documentation, and begins the review and revision process. This review and revision process may require additional discussions (e.g., in meetings, chat, email, etc.) with the Requester(s), Stake Holder(s), and/or SME(s). Finally, the Team Member delivers/publishes the requested documentation when they have determined that the review and revision process is complete; however, Requestor(s) may require the Team Member to receive a formal acceptance of the documentation prior to delivery/publication.</p> Important Note <p>Requester(s), Stake Holder(s), and SME(s) are expected to attend meetings and/or respond to correspondence in a timely manner; failure to do so can result in delayed Milestones/Deadlines and/or incorrect content or formatting. Providing a high level of detail in the request form may reduce the number of meetings and/or correspondences.</p> <p>Requestor</p> <ol> <li> <p>Email all required information (i.e., Purpose, Scope, SharePoint site link and administrator, etc.) to the Team Supervisor.</p> Note <p>Requestors must provide sufficient information to complete the request; failure to do so can result in delayed Milestones/Deadlines. Refer to the Request Terminology in the Definitions Table for descriptions of the various required information. </p> </li> </ol> <p>Team Supervisor</p> <ol> <li>Receive and review the request\u2019s information.</li> <li>Determine if the request is approved.<ol> <li>If the request is approved, then continue to step 4.</li> <li>If the request is denied, then notify the Requestor(s) of the denial; no further action required. </li> </ol> </li> <li>Create a Jira story for the request.</li> <li>Determine if the request/story needs to be linked to an existing story.<ol> <li>If the request/story needs to be linked, then continue to step 6. </li> <li>If the request/story does not need to be linked, then proceed to step 7.</li> </ol> </li> <li>Link the request to an existing request/story. </li> <li>Assign the request to a Team Member.</li> </ol> <p>Team Member</p> <ol> <li>Conduct a discovery call to confirm and/or gather additional request information (i.e., Purpose, Scope, etc.) with the Requestor(s). </li> <li>Make any necessary edits to the request/story.</li> <li>Update the request/story status to <code>In Progress</code> once work has begun.</li> <li>Create an initial draft of the requested documentation.</li> <li>Conduct the review and revision process.</li> <li>Determine if formal acceptance for delivery/publication is necessary.<ol> <li>If acceptance is necessary, then continue to step 14. </li> <li>If acceptance is not necessary, then update the status of the request/story to <code>Accepted</code> and proceed to step 15.</li> </ol> </li> <li>Determine if the documentation is accepted for delivery/publication by either the Team Supervisor or the Requester(s).<ol> <li>If acceptance is denied, then return to step 12.</li> <li>If acceptance is granted, then update the status of the request to <code>Accepted</code> and continue to step 15.</li> </ol> </li> <li>Deliver/publish the requested documentation as previously defined and update the status of the request to <code>Completed</code>; no further action needed.</li> </ol>"},{"location":"Standard-Opp-Procedure/#appendix-a-jira-workflow-for-requests","title":"Appendix A: Jira Workflow for Requests","text":"<p>The following figure represents the Jira workflow that is applicable to this procedure. Workflow statuses are defined within the Definitions Table.</p> Note <p>This workflow is for context only and is not a fixed workflow within Jira.</p> <p></p> Sign-off Date Name 03/03/2024 Mickey Mouse"},{"location":"Style-Guide/","title":"Style Guide","text":"IntroductionFormatting StandardsWriting StandardsKey Principles Sign-off Date Name 03/07/2024 Mickey Mouse"},{"location":"Style-Guide/#introduction","title":"Introduction","text":"<p>This Style Guide document defines basic grammatical formatting requirements involved in creating documentation. Using these standards allows writers to spend more time on content over formatting and layout, provide consistency across all content, and makes the writing process easier. This is a living document that evolves with the organization. Feedback and suggestions for improvement are valuable, and it is encouraged to actively participate in refining the formatting and writing standards.</p> Note <p>The following rules and conventions apply mostly to Markdown documents but should be applied where possible within other types of documentation (e.g., Microsoft Word files).</p>"},{"location":"Style-Guide/#when-to-use-standards","title":"When to Use Standards","text":"<p>The standards in this document apply to all documentation; however, they can be tailored as necessary to accommodate exceptions.</p>"},{"location":"Style-Guide/#purpose-of-standards","title":"Purpose of Standards","text":"<p>Document standards are rules, models, or examples that writers follow that allow focus to remain on content while creating quality, consistent, and professional documents. Standards help both the writer and the reader. Having and consistently using standards:</p> <ul> <li>Reduces time spent on developing a look or layout</li> <li>Allows time to be spent on content</li> <li>Increases the professional look and feel of documents</li> <li>Aids readers in navigating and understanding content</li> <li>Provides a consistent look and feel throughout a library of materials</li> </ul>"},{"location":"Style-Guide/#formatting-standards","title":"Formatting Standards","text":"<p>When working with Markdown, adhering to consistent formatting standards is essential for clarity and readability. Document conventions should be consistent throughout all documentation.</p>"},{"location":"Style-Guide/#conventions","title":"Conventions","text":"<p>The following table illustrates the conventions that should be used when writing procedures or describing features of software applications and UI objects. </p> Features Convention Example Appendices (1) Use Heading 1 (2) Use letters instead of numbers for numbering Appendix A, Appendix B Buttons (1) Bold (2) Do not use the word \u201cthe\u201d or \u201cbutton\u201d (3) Use the term \u201cclick\u201d when referring to buttons Click Ok Check boxes, spin boxes, and radio buttons (1) Bold (2) Use the term \u201cselect\u201d or \u201cclear\u201d not \u201cclick\u201d Select the Current radio button Code Enter three backticks and \u201csh\u201d to begin the code section and enter three backticks to end it N/A Columns (1) Bold (2) Name of the column goes before the word \u201ccolumn\u201d The Contracts column displays Directory or path (1) Italics (2) Sentence styles; capitalization follows the UI Vacation and and sick pay are located at MyFiles/Accounting/Payroll/VacPay Document names Italics Installation steps can be found in the AGM v4.3 Installation Guide Drop-down lists and related options (1) Bold (2) Use the term \u201cselect\u201d  when referring to drop-down lists (3) Hyphenate the term \u201cdrop-down\u201d Select Address from the Search By drop-down list Field entries and other text areas Enclose text to be entered in quotation marks Enter \u201c1\u201d into the Days filed Field names (1) Bold (2) Use the terms \u201center\u201d when referring to entering text into fields; not \u201ctype\u201d Enter a title in the Title field File Names Enclose the file name in backticks Open the <code>document1.doc</code> folder Filter names (1) Bold (2) Name or filter goes before the word \u201cfilter\u201d The Success Track fileter allows Folder names Italics Select the Examples folder Icons (1) Bold (2) Use the term \u201cselect\u201d when referring to icons (3) Use the name of the icon; not the image Select the Word icon to launch MS Word Keystrokes (1) Bold (2) Use the \u201c+\u201d (no space) to indicate simultaneous keystrokes (3) Use the term \u201cpress\u201d when referring to keystrokes Press Alt+F7 Links Bold Click the Additional information link Means and menu options (1) Bold (2) Use the term \u201cselect\u201d when referring to menu names and options (3) For nested menu options use an (&gt;) with a space on either side Select File &gt; New &gt; Document Navigation Bold the words and the arrow Navigate to Directories &gt; Folders &gt; Files Notes and warnings Use collapsable admonition blocks N/A Page names (1) Bold (2) Use \u201cdisplays\u201d not \u201copens\u201d The Home page opens Parameter names (1) Italics (2) Capitalization varies createNewOffer Placeholder text Use brackets File should be named [Project] Roles (1) Bold (2) Capitalized The Requestor must follow up Tabs and panels (1) Bold (2) Use the term \u201cclick\u201d and \u201cdisplays\u201d when referring to tabs and panels Click the Workload tab Tiles (1) Bold (2) Use \u201cSelect\u201d Select the Cases tile Windows (1) Bold (2) Use the terms \u201copen\u201d and \u201cclose\u201d when referring to a window; do not use \u201cappear\u201d or \u201cdisappear\u201d (3) Use the term \u201cin\u201d when referring to objects in a window (4) Do not use \u201cscreen\u201d The Customers window opens"},{"location":"Style-Guide/#covers-headers-and-footers","title":"Covers, Headers, and Footers","text":"<p>Covers, headers, and footers are not required for Markdown documents. </p>"},{"location":"Style-Guide/#font","title":"Font","text":"<p>GitHub Pages does not have specific font settings that can be adjusted within its platform.</p>"},{"location":"Style-Guide/#headings","title":"Headings","text":"<p>Headings alert the reader to the importance of information (e.g., Heading 1 contains general information, while Heading 4 contains more specific information). When used effectively, they also allow a reader to quickly navigate through a document to find required information.</p> <p>The numbering of headings is not required for documents where numbering would interfere with the usefulness of the document. For instance, Markdown documents should not have numbered headings because it would interfere with exporting them to PDF.</p>"},{"location":"Style-Guide/#writing-standards","title":"Writing Standards","text":"<p>The standards and guidelines referenced below illustrate the correct use of grammar, spelling, and formatting that should be followed for all content.</p>"},{"location":"Style-Guide/#abbreviations","title":"Abbreviations","text":"<p>The following abbreviations are used in documentation:</p> <ul> <li>For example: (e.g., xxx)</li> <li>In other words; that is: (i.e., xxx)</li> <li>And so on: etc.</li> </ul>"},{"location":"Style-Guide/#acronyms","title":"Acronyms","text":"<p>An acronym is a word formed from the initial letters of a name. The first time an acronym is used in a document, it must be spelled out and followed by the acronym in parenthesis (e.g., Point of Contact (POC)). Then only the acronym is used throughout the remainder of the document. If a term is not repeated, then the acronym should not be defined.</p>"},{"location":"Style-Guide/#contractions","title":"Contractions","text":"<p>Do not use contractions.</p>"},{"location":"Style-Guide/#cross-references","title":"Cross References","text":"<p>Cross references refer to readers from one part of a document or file to another part of the same document or file containing related information. When cross-referencing material, use the term \u201crefer to\u201d preceding a reference; do not use \u201csee\u201d. Use the following standards to refer to specific information commonly referred to throughout documents. </p>"},{"location":"Style-Guide/#sections","title":"Sections","text":"<p>When referring to a section, include the title and italicize it. </p>"},{"location":"Style-Guide/#figures-and-tables","title":"Figures and Tables","text":"<p>When referring to numbered figures or tables, include the word \u201cFigure\u201d or \u201cTable\u201d and the name, if any, and italicize it.</p>"},{"location":"Style-Guide/#other-documents","title":"Other Documents","text":"<p>When referring to another document, the title of the document should display in italics. It is best practice is to avoid referring to chapters or sections in another document. If available, include a hyperlink.</p>"},{"location":"Style-Guide/#dates","title":"Dates","text":"<p>It is best practice to use the long form of the date Write the full name of the month and Arabic numerals for the day and full year (e.g., March 8, 2024). Do not use military or international date formats unless it is mandated by a specific document\u2019s requirements.</p>"},{"location":"Style-Guide/#figures-and-screenshots","title":"Figures and Screenshots","text":"<p>Figures and screenshots should be displayed after the steps that cause them to display. They should also have a dark gray boarder added before being uploaded to the repository.</p>"},{"location":"Style-Guide/#jargon","title":"Jargon","text":"<p>Jargon is a specialized term or technical language that is understood only by a particular group. Avoid using jargon.</p>"},{"location":"Style-Guide/#lists","title":"Lists","text":"<p>Lists are made up of three or more items and can be numbered or bulleted, and run-in or vertical. </p>"},{"location":"Style-Guide/#numbered-lists","title":"Numbered Lists","text":"<p>Numbered lists should be used to indicate an order of interdependent steps or a ranking of one item over another. A number or letter and a period precedes items in chronological lists to indicate a sequence. When used within a paragraph (i.e., run-in style), the number or italicized letter is placed in parentheses. </p>"},{"location":"Style-Guide/#bulleted-lists","title":"Bulleted Lists","text":"<p>Bulleted lists are typically used for items that are of equal importance or when the sequence doesn\u2019t matter. Bulleted lists with fragmented statements should not include punctuation.</p>"},{"location":"Style-Guide/#notes-and-warnings","title":"Notes and Warnings","text":"<p>Notes are used to highlight material with special importance. Warnings are used to warn readers about possible damage to equipment or data based on what they are doing and should be used sparingly to emphasize their importance. Notes and warnings must be written as collapsable admonitions in Markdown.</p>"},{"location":"Style-Guide/#numbers","title":"Numbers","text":"<p>Spell out all numbers from zero to ten. All other numbers are written out in Arabic form. When specifying a range of numbers, write all numbers in Arabic form regardless of the number (e.g., follow steps 1 through 5). When a sentence starts with a number, spell out the number regardless of its size. </p>"},{"location":"Style-Guide/#punctuation","title":"Punctuation","text":"<p>The following table provides examples of how and when to use commonly used punctuation.</p> Punctuation Convention Period (.) Use one space after the period Comma (,) Separates a series of three or more items; when a conjunction seperates the last two items, place a comma before the conjuction ( e..g, red, white, and blue) Colon (:) Use one space after a colon Semi-colon (;) Use one space after a semi-colon Quotation marks (\u201c) Periods and commas are always placed inside; question mark placement is determined by whether the question is part of the quote (i.e., inside) or the sentence (i.e., outside); use only one ending punctuation mark (i.e., if the period is within the quotation mark, and a questions mark is outside the quotation mark, omit the period) Single quotation marks (\u2018) Use only for quoting within other quotes; period is always placed inside"},{"location":"Style-Guide/#spelling","title":"Spelling","text":"<p>Misspelled words are easy to correct. Use spell check (e.g., Vale) on all documents.</p> Note <p>Spell check will not correct a word that is used incorrectly and may miss legitimate words that are used incorrectly (e.g., I have to pens).</p>"},{"location":"Style-Guide/#tables","title":"Tables","text":"<p>Tables allow writers to present information in an easy to view format. Tables in Markdown can be created by using a combination of vertical bars (|) and hyphens (-) to define the table structure. Alignment can be specified within cells using colons in the header row. (e.g., \u201c:- - -\u201d or \u201c- - -\u201d indicates left alignment, \u201c:- - -:\u201d indicates center alignment, and \u201c- - -:\u201d indicates right alignment.) Left-justified text is the default; it is recommended, but not required. Bulleted and numbered lists within tables are not available in Markdown. Instead, use the run-in style defined in Lists section of this document.</p>"},{"location":"Style-Guide/#voice","title":"Voice","text":"<p>Write in the active voice. \u201cYou\u201d is implied, but not used.</p>"},{"location":"Style-Guide/#key-principles","title":"Key Principles","text":"<p>Well-crafted documentation should have the following qualities.</p>"},{"location":"Style-Guide/#concise","title":"Concise","text":"<p>Instructions that are easy to understand are most effective. Avoid adding extraneous information. Keep sentences short. Strive for minimalist writing when appropriate.</p>"},{"location":"Style-Guide/#consistent","title":"Consistent","text":"<p>Consistency is key. Using the same labeling, terminology, writing styles, and voice throughout the documentation drives clarity.</p>"},{"location":"Style-Guide/#grammatically-correct","title":"Grammatically Correct","text":"<p>Grammatical errors in a document can create confusion among readers and can change the meaning of the content resulting in misinformation. Always perform a spell and grammar check.</p>"},{"location":"Style-Guide/#well-organized","title":"Well-Organized","text":"<p>Content should be organized in a logical sequence. A well-organized document ensures that the audience can easily follow and find information.</p>"},{"location":"Style-Guide/#technically-accurate","title":"Technically Accurate","text":"<p>It is important that document content is technically accurate, presented in a clear and concise manner, and is appropriate for the audience which it is intended for. To ensure accuracy, content should be reviewed by Subject Matter Experts, Product Owners, and any other interested parties. Inaccuracies in any part of the document can diminish a reader\u2019s confidence in the content.</p>"},{"location":"Style-Guide/#useful","title":"Useful","text":"<p>Content should advance the understanding of the product. Always check with leadership if there is any uncertainty.</p>"}]}